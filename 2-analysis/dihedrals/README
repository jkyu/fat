compute-dihedrals.py is heavily commented, so details can be found there. It goes through each raw trajectory and places the evolution of the dihedral angles on a uniform time grid.
The data is saved in ./data/dihedrals.pickle

There is an option to track the dihedral angle only on a specific state over time where we fix a TBF to its final dihedral angle after it dies. 
Turn this on with the do_state_specific flag. Otherwise, the dihedral angle is given a NaN value at a time point if the TBF is dead. 
The NaNs are really useful for averaging over all TBFs in the time while excluding dead ones or ones that haven't spawned yet. 

Use plot-singles.py to track the dihedral angle evolution for a single IC, including all spawning events and all TBF children.
Use plot-avg.py to plot the dihedral angle evolution averaged over all TBFs for all ICs. 
For systems where the twisting is unconstrained, this isn't very useful because twisting in both directions is equally likely.
With enough samples, the twisting will average to near zero. 
